import kotlin.Boolean;
import me.dvyy.tasks.model.Highlight;
import me.dvyy.tasks.model.ListId;
import me.dvyy.tasks.model.TaskId;

CREATE TABLE IF NOT EXISTS task (
  uuid BLOB AS TaskId PRIMARY KEY NOT NULL,
  text TEXT,
  highlight TEXT AS Highlight NOT NULL,
  completed INTEGER AS Boolean NOT NULL,
  list BLOB AS ListId NOT NULL,
  rank INTEGER NOT NULL
);

CREATE INDEX IF NOT EXISTS task_list ON task(list);

selectAllUUIDs:
SELECT uuid FROM task;

upsert:
INSERT OR REPLACE INTO task
VALUES ?;

forList:
SELECT * FROM task
WHERE list = ?
ORDER BY rank, uuid;

get:
SELECT * FROM task
WHERE uuid = ?;

delete:
DELETE FROM task
WHERE uuid = ?;

lastRank:
SELECT rank FROM task
WHERE list = ?
ORDER BY rank DESC
LIMIT 1;

shiftRanksDown:
UPDATE task SET rank = rank + 1
WHERE list = ? AND rank >= ?;

isRankAvailable:
SELECT 1 FROM task
WHERE list = ? AND rank = ?;


-- taskAfter:
-- WITH original AS (SELECT rank, list FROM task WHERE uuid = ?)
-- SELECT uuid FROM task, original
-- WHERE task.rank > original.rank AND task.list = original.list
-- LIMIT 1;
--
--
-- taskBefore:
-- WITH original AS (SELECT rank, list FROM task WHERE uuid = ?)
-- SELECT uuid FROM task, original
-- WHERE task.rank < original.rank AND task.list = original.list
-- ORDER BY task.rank DESC
-- LIMIT 1;
